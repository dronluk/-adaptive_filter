clear all; clc;

f=1e6;%частота сигнала
fd=100e6;%Частота дискретизации
td=1/fd;%Шаг
lenght=3e8/f; % длинна волны
t=td:td:0.01;%Время
N=1:length(t);%длинна
PRN=1;
len=1023;

%bitar = get_ca_bits(len,PRN);

noise1 = randn(1,length(t))+1i*randn(1,length(t));  % некоррелированный собственный шум 1й антены
noise2 = randn(1,length(t))+1i*randn(1,length(t));  % некоррелированный собственный шум 2й антены
noise3 = randn(1,length(t))+1i*randn(1,length(t));  % некоррелированный собственный шум 3й антены
noise4 = randn(1,length(t))+1i*randn(1,length(t));  % некоррелированный собственный шум 4й антены

A=2;%Амплитуда
ph = 1+1i*0.4; %случайная фаза
jam1=exp(1i*2*pi*f*td*N);           % сигнал коррелированной помехи
jam2=ph*exp(1i*2*pi*f*td*N);  % сигнал коррелированной помехи
jam3=ph*exp(1i*2*pi*f*td*N);  % сигнал коррелированной помехи
jam4=(0.3*ph)*exp(1i*2*pi*f*td*N);  % сигнал коррелированной помехи

x1=A*jam1+noise1;  % итоговый сигнал на выходе 1й антенны
x2=A*jam2+noise2;  % итоговый сигнал на выходе 2й антенны
x2_2 = circshift(x2,1); % итоговый сигнал с задержкой на выходе 2й антенны
x2_3 = circshift(x2,2); % итоговый сигнал с задержкой на выходе 2й антенны
x3=A*jam3+noise3;  % итоговый сигнал на выходе 3й антенны
x3_2 = circshift(x3,1); % итоговый сигнал с задержкой на выходе 3й антенны
x3_3 = circshift(x3,2); % итоговый сигнал с задержкой на выходе 3й антенны
x4=A*jam4+noise4;  % итоговый сигнал на выходе 4й антенны
x4_2 = circshift(x4,1); % итоговый сигнал с задержкой на выходе 4й антенны
x4_3 = circshift(x4,2); % итоговый сигнал с задержкой на выходе 4й антенны

% Отображение сигнала с 4х антенн под шумом
figure(1)
plot(real(x1)); hold on; xlim([1 500]);
plot(real(x2),'r');
plot(real(x3),'g'); 
plot(real(x4),'k'); 
title('Сигналы с 4х антенн');
hold off;

Inter1=x1(1:1000); % интервал выборки x1
Inter2=x2(1:1000); % интервал выборки x2
Inter2_2=x2_2(1:1000); % интервал выборки x2_2
Inter2_3=x2_3(1:1000); % интервал выборки x2_3
Inter3=x3(1:1000); % интервал выборки x3
Inter3_2=x3_2(1:1000); % интервал выборки x3_2
Inter3_3=x3_3(1:1000); % интервал выборки x3_3
Inter4=x4(1:1000); % интервал выборки x4
Inter4_2=x4_2(1:1000); % интервал выборки x4_2
Inter4_3=x4_3(1:1000); % интервал выборки x4_3

d=Inter1;  % Эталонный сигнал выборки
d2=x1; % Эталонный сигнал
Uinter = [Inter2;Inter2_2;Inter2_3;Inter3;Inter3_2;Inter3_3;Inter4;Inter4_2;Inter4_3]; % Периферийные антенны выборки
U = [Inter2;Inter2_2;Inter2_3;Inter3;Inter3_2;Inter3_3;Inter4;Inter4_2;Inter4_3];  %Периферийные антенны полноценного сигнала

W=[0;0;0;0;0;0;0;0;0];%коэффицент
step = 1000; %Количество итераций фильтра
mu = 2/10000000;   % шаг сходимости
coef=zeros(3,step);
%пространственно-временной  фильтр градиентного спуска
for n=1:step
    Y = W'*Uinter; %сигналы с периферийных антенн стремящиеся к эталонному
    e = d - Y; % выходной сигнал 
    W_ = mu*Uinter*e'; % расчёт коэффицента
    W = W + W_;
    for k=1:3%запись в память коэффиценты для 3х переферийных антен
    coef(k,n)=W(k*3,1);
    end
end;
 w=zeros(3,1);
 for k=1:3
 w(k,1)=W(k*3,1);
 end  
noise(1,:)=noise2(1:1000);
noise(2,:)=noise3(1:1000);
noise(3,:)=noise4(1:1000);
S=w'*noise;
Z=abs(Y-S).^2;
figure(5);
plot(Z);
std(e)%Среднее отклонение сходимости
figure(4);hold on
plot(real(coef(1,:)),'r');plot(real(coef(2,:)),'g');plot(real(coef(3,:)),'k');%Отображение как растут коэффиценты
title('Коэффиценты');
%отображение эталонного сигнала, и периферийных
figure(2);
plot(real(d)); hold on;
plot(real(Y),'r');
title('Эталонный сигнал, и сигнал с переферийных антенн');
hold off;

Y=W'*U;%применение полученного коэффицента к полному сигналу периферийных антенн
%отображение выходного сигнала
figure(3);
subplot(2,1,2);plot(real(e),'r');title('Выходной сигнал');
subplot(2,1,1);plot(real(noise1));xlim([1 1000]);title('Собственный не корреляционный шум');
